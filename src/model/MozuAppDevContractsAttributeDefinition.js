/**
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MozuAppDevContractsAttributeVocabularyValue from './MozuAppDevContractsAttributeVocabularyValue';

/**
 * The MozuAppDevContractsAttributeDefinition model module.
 * @module model/MozuAppDevContractsAttributeDefinition
 * @version v1
 */
class MozuAppDevContractsAttributeDefinition {
    /**
     * Constructs a new <code>MozuAppDevContractsAttributeDefinition</code>.
     * @alias module:model/MozuAppDevContractsAttributeDefinition
     */
    constructor() { 
        
        MozuAppDevContractsAttributeDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MozuAppDevContractsAttributeDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MozuAppDevContractsAttributeDefinition} obj Optional instance to populate.
     * @return {module:model/MozuAppDevContractsAttributeDefinition} The populated <code>MozuAppDevContractsAttributeDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MozuAppDevContractsAttributeDefinition();

            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('attributeCode')) {
                obj['attributeCode'] = ApiClient.convertToType(data['attributeCode'], 'String');
            }
            if (data.hasOwnProperty('attributeFqn')) {
                obj['attributeFqn'] = ApiClient.convertToType(data['attributeFqn'], 'String');
            }
            if (data.hasOwnProperty('dataType')) {
                obj['dataType'] = ApiClient.convertToType(data['dataType'], 'String');
            }
            if (data.hasOwnProperty('inputType')) {
                obj['inputType'] = ApiClient.convertToType(data['inputType'], 'String');
            }
            if (data.hasOwnProperty('isReadOnly')) {
                obj['isReadOnly'] = ApiClient.convertToType(data['isReadOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('vocabularyValues')) {
                obj['vocabularyValues'] = ApiClient.convertToType(data['vocabularyValues'], [MozuAppDevContractsAttributeVocabularyValue]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} namespace
 */
MozuAppDevContractsAttributeDefinition.prototype['namespace'] = undefined;

/**
 * @member {String} attributeCode
 */
MozuAppDevContractsAttributeDefinition.prototype['attributeCode'] = undefined;

/**
 * @member {String} attributeFqn
 */
MozuAppDevContractsAttributeDefinition.prototype['attributeFqn'] = undefined;

/**
 * @member {String} dataType
 */
MozuAppDevContractsAttributeDefinition.prototype['dataType'] = undefined;

/**
 * @member {String} inputType
 */
MozuAppDevContractsAttributeDefinition.prototype['inputType'] = undefined;

/**
 * @member {Boolean} isReadOnly
 */
MozuAppDevContractsAttributeDefinition.prototype['isReadOnly'] = undefined;

/**
 * @member {Array.<module:model/MozuAppDevContractsAttributeVocabularyValue>} vocabularyValues
 */
MozuAppDevContractsAttributeDefinition.prototype['vocabularyValues'] = undefined;






export default MozuAppDevContractsAttributeDefinition;

