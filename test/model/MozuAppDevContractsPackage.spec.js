/**
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KiboAppDevService);
  }
}(this, function(expect, KiboAppDevService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KiboAppDevService.MozuAppDevContractsPackage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MozuAppDevContractsPackage', function() {
    it('should create an instance of MozuAppDevContractsPackage', function() {
      // uncomment below and update the code to test MozuAppDevContractsPackage
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be.a(KiboAppDevService.MozuAppDevContractsPackage);
    });

    it('should have the property updateDate (base name: "updateDate")', function() {
      // uncomment below and update the code to test the property updateDate
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationUpdateDate (base name: "applicationUpdateDate")', function() {
      // uncomment below and update the code to test the property applicationUpdateDate
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationName (base name: "applicationName")', function() {
      // uncomment below and update the code to test the property applicationName
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationTypeId (base name: "applicationTypeId")', function() {
      // uncomment below and update the code to test the property applicationTypeId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationTypeName (base name: "applicationTypeName")', function() {
      // uncomment below and update the code to test the property applicationTypeName
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property majorVersion (base name: "majorVersion")', function() {
      // uncomment below and update the code to test the property majorVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property minorVersion (base name: "minorVersion")', function() {
      // uncomment below and update the code to test the property minorVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property revision (base name: "revision")', function() {
      // uncomment below and update the code to test the property revision
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property sharedSecret (base name: "sharedSecret")', function() {
      // uncomment below and update the code to test the property sharedSecret
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationStatusId (base name: "applicationStatusId")', function() {
      // uncomment below and update the code to test the property applicationStatusId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationStatusName (base name: "applicationStatusName")', function() {
      // uncomment below and update the code to test the property applicationStatusName
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property apiVersion (base name: "apiVersion")', function() {
      // uncomment below and update the code to test the property apiVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationDescription (base name: "applicationDescription")', function() {
      // uncomment below and update the code to test the property applicationDescription
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property themeEngineVersion (base name: "themeEngineVersion")', function() {
      // uncomment below and update the code to test the property themeEngineVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property namespace (base name: "namespace")', function() {
      // uncomment below and update the code to test the property namespace
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property validApplicationStatusIdList (base name: "validApplicationStatusIdList")', function() {
      // uncomment below and update the code to test the property validApplicationStatusIdList
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property appSchemeVersion (base name: "appSchemeVersion")', function() {
      // uncomment below and update the code to test the property appSchemeVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property appConfigUrl (base name: "appConfigUrl")', function() {
      // uncomment below and update the code to test the property appConfigUrl
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property isReleasePackage (base name: "isReleasePackage")', function() {
      // uncomment below and update the code to test the property isReleasePackage
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property packageName (base name: "packageName")', function() {
      // uncomment below and update the code to test the property packageName
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property packageDescription (base name: "packageDescription")', function() {
      // uncomment below and update the code to test the property packageDescription
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property dataNamespace (base name: "dataNamespace")', function() {
      // uncomment below and update the code to test the property dataNamespace
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "userId")', function() {
      // uncomment below and update the code to test the property userId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationId (base name: "applicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationDetailId (base name: "applicationDetailId")', function() {
      // uncomment below and update the code to test the property applicationDetailId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property isLocked (base name: "isLocked")', function() {
      // uncomment below and update the code to test the property isLocked
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property isDeleted (base name: "isDeleted")', function() {
      // uncomment below and update the code to test the property isDeleted
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property assetFileCount (base name: "assetFileCount")', function() {
      // uncomment below and update the code to test the property assetFileCount
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property packageGuid (base name: "packageGuid")', function() {
      // uncomment below and update the code to test the property packageGuid
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationStatus (base name: "applicationStatus")', function() {
      // uncomment below and update the code to test the property applicationStatus
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationBehaviors (base name: "applicationBehaviors")', function() {
      // uncomment below and update the code to test the property applicationBehaviors
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationSubscriptions (base name: "applicationSubscriptions")', function() {
      // uncomment below and update the code to test the property applicationSubscriptions
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationCapabilityTypes (base name: "applicationCapabilityTypes")', function() {
      // uncomment below and update the code to test the property applicationCapabilityTypes
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationAttributes (base name: "applicationAttributes")', function() {
      // uncomment below and update the code to test the property applicationAttributes
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationCapabilities (base name: "applicationCapabilities")', function() {
      // uncomment below and update the code to test the property applicationCapabilities
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationEntitlements (base name: "applicationEntitlements")', function() {
      // uncomment below and update the code to test the property applicationEntitlements
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property attributeNamespace (base name: "attributeNamespace")', function() {
      // uncomment below and update the code to test the property attributeNamespace
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property hasApplicationVersions (base name: "hasApplicationVersions")', function() {
      // uncomment below and update the code to test the property hasApplicationVersions
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property legacyNamespace (base name: "legacyNamespace")', function() {
      // uncomment below and update the code to test the property legacyNamespace
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property namespaceRegistryId (base name: "namespaceRegistryId")', function() {
      // uncomment below and update the code to test the property namespaceRegistryId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property publishedParentThemeId (base name: "publishedParentThemeId")', function() {
      // uncomment below and update the code to test the property publishedParentThemeId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property publishedParentSemanticVersion (base name: "publishedParentSemanticVersion")', function() {
      // uncomment below and update the code to test the property publishedParentSemanticVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property semanticVersionRange (base name: "semanticVersionRange")', function() {
      // uncomment below and update the code to test the property semanticVersionRange
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property parentThemeName (base name: "parentThemeName")', function() {
      // uncomment below and update the code to test the property parentThemeName
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property parentThemeAppKey (base name: "parentThemeAppKey")', function() {
      // uncomment below and update the code to test the property parentThemeAppKey
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property updateParentAppKey (base name: "updateParentAppKey")', function() {
      // uncomment below and update the code to test the property updateParentAppKey
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property updateAvailable (base name: "updateAvailable")', function() {
      // uncomment below and update the code to test the property updateAvailable
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property appKey (base name: "appKey")', function() {
      // uncomment below and update the code to test the property appKey
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property updateParentThemeName (base name: "updateParentThemeName")', function() {
      // uncomment below and update the code to test the property updateParentThemeName
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property updateParentThemeVersion (base name: "updateParentThemeVersion")', function() {
      // uncomment below and update the code to test the property updateParentThemeVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

    it('should have the property applicationOwnerDevAccountId (base name: "applicationOwnerDevAccountId")', function() {
      // uncomment below and update the code to test the property applicationOwnerDevAccountId
      //var instane = new KiboAppDevService.MozuAppDevContractsPackage();
      //expect(instance).to.be();
    });

  });

}));
