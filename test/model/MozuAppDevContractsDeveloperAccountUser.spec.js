/**
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KiboAppDevService);
  }
}(this, function(expect, KiboAppDevService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MozuAppDevContractsDeveloperAccountUser', function() {
    it('should create an instance of MozuAppDevContractsDeveloperAccountUser', function() {
      // uncomment below and update the code to test MozuAppDevContractsDeveloperAccountUser
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be.a(KiboAppDevService.MozuAppDevContractsDeveloperAccountUser);
    });

    it('should have the property developerId (base name: "developerId")', function() {
      // uncomment below and update the code to test the property developerId
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "userId")', function() {
      // uncomment below and update the code to test the property userId
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property emailAddress (base name: "emailAddress")', function() {
      // uncomment below and update the code to test the property emailAddress
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workContactId (base name: "workContactId")', function() {
      // uncomment below and update the code to test the property workContactId
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workAddress1 (base name: "workAddress1")', function() {
      // uncomment below and update the code to test the property workAddress1
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workAddress2 (base name: "workAddress2")', function() {
      // uncomment below and update the code to test the property workAddress2
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workAddress3 (base name: "workAddress3")', function() {
      // uncomment below and update the code to test the property workAddress3
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workAddress4 (base name: "workAddress4")', function() {
      // uncomment below and update the code to test the property workAddress4
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workCity (base name: "workCity")', function() {
      // uncomment below and update the code to test the property workCity
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workState (base name: "workState")', function() {
      // uncomment below and update the code to test the property workState
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workZip (base name: "workZip")', function() {
      // uncomment below and update the code to test the property workZip
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workCountry (base name: "workCountry")', function() {
      // uncomment below and update the code to test the property workCountry
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property workPhone (base name: "workPhone")', function() {
      // uncomment below and update the code to test the property workPhone
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalContactId (base name: "personalContactId")', function() {
      // uncomment below and update the code to test the property personalContactId
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalAddress1 (base name: "personalAddress1")', function() {
      // uncomment below and update the code to test the property personalAddress1
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalAddress2 (base name: "personalAddress2")', function() {
      // uncomment below and update the code to test the property personalAddress2
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalAddress3 (base name: "personalAddress3")', function() {
      // uncomment below and update the code to test the property personalAddress3
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalAddress4 (base name: "personalAddress4")', function() {
      // uncomment below and update the code to test the property personalAddress4
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalCity (base name: "personalCity")', function() {
      // uncomment below and update the code to test the property personalCity
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalState (base name: "personalState")', function() {
      // uncomment below and update the code to test the property personalState
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalZip (base name: "personalZip")', function() {
      // uncomment below and update the code to test the property personalZip
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalCountry (base name: "personalCountry")', function() {
      // uncomment below and update the code to test the property personalCountry
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property personalPhone (base name: "personalPhone")', function() {
      // uncomment below and update the code to test the property personalPhone
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

    it('should have the property roles (base name: "roles")', function() {
      // uncomment below and update the code to test the property roles
      //var instane = new KiboAppDevService.MozuAppDevContractsDeveloperAccountUser();
      //expect(instance).to.be();
    });

  });

}));
