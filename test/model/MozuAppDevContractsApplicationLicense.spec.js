/**
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KiboAppDevService);
  }
}(this, function(expect, KiboAppDevService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MozuAppDevContractsApplicationLicense', function() {
    it('should create an instance of MozuAppDevContractsApplicationLicense', function() {
      // uncomment below and update the code to test MozuAppDevContractsApplicationLicense
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be.a(KiboAppDevService.MozuAppDevContractsApplicationLicense);
    });

    it('should have the property applicationLicenseId (base name: "applicationLicenseId")', function() {
      // uncomment below and update the code to test the property applicationLicenseId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be();
    });

    it('should have the property applicationId (base name: "applicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be();
    });

    it('should have the property applicationLicenseTypeId (base name: "applicationLicenseTypeId")', function() {
      // uncomment below and update the code to test the property applicationLicenseTypeId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be();
    });

    it('should have the property localeCode (base name: "localeCode")', function() {
      // uncomment below and update the code to test the property localeCode
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be();
    });

    it('should have the property applicationPrice (base name: "applicationPrice")', function() {
      // uncomment below and update the code to test the property applicationPrice
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be();
    });

    it('should have the property isoCurrencyCode (base name: "isoCurrencyCode")', function() {
      // uncomment below and update the code to test the property isoCurrencyCode
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be();
    });

    it('should have the property auditInfo (base name: "auditInfo")', function() {
      // uncomment below and update the code to test the property auditInfo
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationLicense();
      //expect(instance).to.be();
    });

  });

}));
