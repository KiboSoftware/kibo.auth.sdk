/**
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KiboAppDevService);
  }
}(this, function(expect, KiboAppDevService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KiboAppDevService.MozuAppDevContractsProject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MozuAppDevContractsProject', function() {
    it('should create an instance of MozuAppDevContractsProject', function() {
      // uncomment below and update the code to test MozuAppDevContractsProject
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be.a(KiboAppDevService.MozuAppDevContractsProject);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property customerName (base name: "customerName")', function() {
      // uncomment below and update the code to test the property customerName
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property projectStatusId (base name: "projectStatusId")', function() {
      // uncomment below and update the code to test the property projectStatusId
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property projectStatusName (base name: "projectStatusName")', function() {
      // uncomment below and update the code to test the property projectStatusName
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property projectDescription (base name: "projectDescription")', function() {
      // uncomment below and update the code to test the property projectDescription
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property engagementNumber (base name: "engagementNumber")', function() {
      // uncomment below and update the code to test the property engagementNumber
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property estimatedEndDate (base name: "estimatedEndDate")', function() {
      // uncomment below and update the code to test the property estimatedEndDate
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property additionalInfo (base name: "additionalInfo")', function() {
      // uncomment below and update the code to test the property additionalInfo
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property projectApplications (base name: "projectApplications")', function() {
      // uncomment below and update the code to test the property projectApplications
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property projectTenants (base name: "projectTenants")', function() {
      // uncomment below and update the code to test the property projectTenants
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property projectUsers (base name: "projectUsers")', function() {
      // uncomment below and update the code to test the property projectUsers
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

    it('should have the property clientsMainContactInfo (base name: "clientsMainContactInfo")', function() {
      // uncomment below and update the code to test the property clientsMainContactInfo
      //var instane = new KiboAppDevService.MozuAppDevContractsProject();
      //expect(instance).to.be();
    });

  });

}));
