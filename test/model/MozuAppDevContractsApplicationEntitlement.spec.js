/**
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KiboAppDevService);
  }
}(this, function(expect, KiboAppDevService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MozuAppDevContractsApplicationEntitlement', function() {
    it('should create an instance of MozuAppDevContractsApplicationEntitlement', function() {
      // uncomment below and update the code to test MozuAppDevContractsApplicationEntitlement
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be.a(KiboAppDevService.MozuAppDevContractsApplicationEntitlement);
    });

    it('should have the property appKey (base name: "appKey")', function() {
      // uncomment below and update the code to test the property appKey
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property applicationEntitlementId (base name: "applicationEntitlementId")', function() {
      // uncomment below and update the code to test the property applicationEntitlementId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property packageId (base name: "packageId")', function() {
      // uncomment below and update the code to test the property packageId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property applicationLicenseType (base name: "applicationLicenseType")', function() {
      // uncomment below and update the code to test the property applicationLicenseType
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property entitlementStatus (base name: "entitlementStatus")', function() {
      // uncomment below and update the code to test the property entitlementStatus
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property tenantId (base name: "tenantId")', function() {
      // uncomment below and update the code to test the property tenantId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property siteId (base name: "siteId")', function() {
      // uncomment below and update the code to test the property siteId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property effectiveStartDate (base name: "effectiveStartDate")', function() {
      // uncomment below and update the code to test the property effectiveStartDate
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property effectiveEndDate (base name: "effectiveEndDate")', function() {
      // uncomment below and update the code to test the property effectiveEndDate
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property applicationTransactions (base name: "applicationTransactions")', function() {
      // uncomment below and update the code to test the property applicationTransactions
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property applicationName (base name: "applicationName")', function() {
      // uncomment below and update the code to test the property applicationName
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property applicationVersion (base name: "applicationVersion")', function() {
      // uncomment below and update the code to test the property applicationVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property installedByFirstName (base name: "installedByFirstName")', function() {
      // uncomment below and update the code to test the property installedByFirstName
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property installedByLastName (base name: "installedByLastName")', function() {
      // uncomment below and update the code to test the property installedByLastName
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property installedDate (base name: "installedDate")', function() {
      // uncomment below and update the code to test the property installedDate
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property packageName (base name: "packageName")', function() {
      // uncomment below and update the code to test the property packageName
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property tenantName (base name: "tenantName")', function() {
      // uncomment below and update the code to test the property tenantName
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property applicationStatusId (base name: "applicationStatusId")', function() {
      // uncomment below and update the code to test the property applicationStatusId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property applicationId (base name: "applicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property devAccountId (base name: "devAccountId")', function() {
      // uncomment below and update the code to test the property devAccountId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property installedAppsApplicationId (base name: "installedAppsApplicationId")', function() {
      // uncomment below and update the code to test the property installedAppsApplicationId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

    it('should have the property appOwnerDevAccountId (base name: "appOwnerDevAccountId")', function() {
      // uncomment below and update the code to test the property appOwnerDevAccountId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplicationEntitlement();
      //expect(instance).to.be();
    });

  });

}));
