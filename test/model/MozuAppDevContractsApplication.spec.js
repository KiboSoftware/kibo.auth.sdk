/**
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KiboAppDevService);
  }
}(this, function(expect, KiboAppDevService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KiboAppDevService.MozuAppDevContractsApplication();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MozuAppDevContractsApplication', function() {
    it('should create an instance of MozuAppDevContractsApplication', function() {
      // uncomment below and update the code to test MozuAppDevContractsApplication
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be.a(KiboAppDevService.MozuAppDevContractsApplication);
    });

    it('should have the property applicationId (base name: "applicationId")', function() {
      // uncomment below and update the code to test the property applicationId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property developerAccountId (base name: "developerAccountId")', function() {
      // uncomment below and update the code to test the property developerAccountId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property appSchemeVersion (base name: "appSchemeVersion")', function() {
      // uncomment below and update the code to test the property appSchemeVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property applicationLicenseTypeId (base name: "applicationLicenseTypeId")', function() {
      // uncomment below and update the code to test the property applicationLicenseTypeId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property applicationStatusId (base name: "applicationStatusId")', function() {
      // uncomment below and update the code to test the property applicationStatusId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property namespace (base name: "namespace")', function() {
      // uncomment below and update the code to test the property namespace
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property appVersion (base name: "appVersion")', function() {
      // uncomment below and update the code to test the property appVersion
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property extendsApplication (base name: "extendsApplication")', function() {
      // uncomment below and update the code to test the property extendsApplication
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property isDeleted (base name: "isDeleted")', function() {
      // uncomment below and update the code to test the property isDeleted
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property isLocked (base name: "isLocked")', function() {
      // uncomment below and update the code to test the property isLocked
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property sharedSecret (base name: "sharedSecret")', function() {
      // uncomment below and update the code to test the property sharedSecret
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property validApplicationStatusIdList (base name: "validApplicationStatusIdList")', function() {
      // uncomment below and update the code to test the property validApplicationStatusIdList
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property changeNotes (base name: "changeNotes")', function() {
      // uncomment below and update the code to test the property changeNotes
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property apiVersionNumber (base name: "apiVersionNumber")', function() {
      // uncomment below and update the code to test the property apiVersionNumber
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property apiMajorVersionNumber (base name: "apiMajorVersionNumber")', function() {
      // uncomment below and update the code to test the property apiMajorVersionNumber
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property isNamespaceLocked (base name: "isNamespaceLocked")', function() {
      // uncomment below and update the code to test the property isNamespaceLocked
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property applicationTypeId (base name: "applicationTypeId")', function() {
      // uncomment below and update the code to test the property applicationTypeId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property applicationTypeName (base name: "applicationTypeName")', function() {
      // uncomment below and update the code to test the property applicationTypeName
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property releasePackageId (base name: "releasePackageId")', function() {
      // uncomment below and update the code to test the property releasePackageId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property internalAppId (base name: "internalAppId")', function() {
      // uncomment below and update the code to test the property internalAppId
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

    it('should have the property isExtensionCertified (base name: "isExtensionCertified")', function() {
      // uncomment below and update the code to test the property isExtensionCertified
      //var instane = new KiboAppDevService.MozuAppDevContractsApplication();
      //expect(instance).to.be();
    });

  });

}));
